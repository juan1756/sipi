@using System.Configuration;
@model SIPI.Presentation.Website.Models.Catalogo.IndexModel
@{
    ViewBag.Title = "Crear pedido";
    var HtmlFiltros = Html.ToInnerModel(x => x.Filtros);
}

<article class="content cards-page">
    <div class="title-block">
        <h3 class="title">Contenido multimedial</h3>
    </div>
    <section class="section">
        <div class="row">
            <div class="col-md-12">
                <form id="frmFilters" method="get">
                    <div class="col-md-8">
                        <div class="form-group row">
                            <div class="row">
                                <label class="col-md-2 form-control-label">CATEGORÍA</label>
                                <div class="col-md-4">
                                    @HtmlFiltros.DropDownListFor(x => x.CategoriaId, Model.Categorias, "", new { @class = "c-select form-control boxed" })
                                </div>
                                <label class="col-md-2 form-control-label">TEMA</label>
                                <div class="col-md-4">
                                    @HtmlFiltros.TextBoxFor(x => x.Tema, new { @class = "form-control boxed" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="row">
                                <label class="col-md-1 form-control-label">FECHA</label>
                                <div class="col-md-3">
                                    @HtmlFiltros.TextBoxFor(x => x.FechaDesde, "{0:dd/MM/yyyy}", new { @class = "form-control boxed", data_apply = "datepicker", placeholder = "dd/mm/aaaa" })
                                </div>
                                <label class="col-md-1 form-control-label">A</label>
                                <div class="col-md-3">
                                    @HtmlFiltros.TextBoxFor(x => x.FechaHasta, "{0:dd/MM/yyyy}", new { @class = "form-control boxed", data_apply = "datepicker", placeholder = "dd/mm/aaaa" })
                                </div>
                                <label class="col-md-1 form-control-label">TIPO</label>
                                <div class="col-md-3">
                                    @HtmlFiltros.DropDownListFor(x => x.TipoId, Model.Tipos, "", new { @class = "c-select form-control boxed" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <label>
                                    <input id="SelectAll" class="checkbox" type="checkbox">
                                    <span class="pointer">Seleccionar todos</span>
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-1">
                        &nbsp;
                    </div>
                    <div class="col-md-3">
                        <div class="form-group row">
                            <button type="submit" class="btn btn-block btn-primary">Buscar</button>
                            <button id="btnOrder" type="button" class="btn btn-block btn-primary" value="Confirmar">Pedir</button>
                            <button type="button" class="btn btn-block btn-primary" onclick="app.go('@Url.Action("index","catalogo", new { area = "" })')">
                                Cancelar
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row"><br /></div>
        <div class="row">
            <div class="col-md-12 dashboard-page">
                <div class="card stats">
                    <div class="card-block">
                        <div class="title-block">
                            <h4 class="title"> Carrito </h4>
                            <p class="title-description">
                                Los datos informados son parciales y correspoden a 1 copia del pedido
                            </p>
                        </div>
                        <div class="row row-sm stats-container">
                            <div class="col-xs-12 col-sm-6 stat-col">
                                <div class="stat-icon">
                                    <i class="fa fa-shopping-cart"></i>
                                </div>
                                <div class="stat">
                                    <div id="CantidadInsumos" class="value">0</div>
                                    <div class="name">DVDs</div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 stat-col">
                                <div class="stat-icon">
                                    <i class="fa fa-dollar"></i>
                                </div>
                                <div class="stat">
                                    <div id="CostoParcial" class="value">$0</div>
                                    <div class="name">Costo parcial</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <section class="section">
        @if (Model.Medios.Rows.Any())
        {

            <form id="frmMedios" method="post">
                @HtmlFiltros.HiddenFor(x => x.CategoriaId)
                @HtmlFiltros.HiddenFor(x => x.Tema)
                @HtmlFiltros.HiddenFor(x => x.FechaDesde)
                @HtmlFiltros.HiddenFor(x => x.FechaHasta)
                @HtmlFiltros.HiddenFor(x => x.TipoId)
                <input type="hidden" name="SelectAll" />
                <input type="hidden" name="step" value="Confirm" />
                <div class="row infinite-container waypoint">
                    @foreach (var m in Model.Medios.Rows)
                    {
                        <div class="col-xl-4 col-md-4 infinite-item">
                            <div class="card card-default">
                                <div class="card-header">
                                    <div class="header-block">
                                        <p class="title">@m.Tema</p>
                                    </div>
                                </div>
                                <div class="card-block">
                                    <iframe width="100%" height="100%"
                                            src="@m.Url"
                                            frameborder="0" allowfullscreen></iframe>
                                </div>
                                <div class="card-footer">
                                    <span class="date pull-left">
                                        @m.FechaGrabacion.ToShortDateString()
                                    </span>
                                    <label class="pull-right">
                                        <input name="Medios" type="checkbox" class="checkbox" data-tamano="@m.Tamano" value="@m.Id" />
                                        <span class="pointer"></span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </form>
        }
        else
        {
            <table class="table fixed-table-pagination table-striped table-bordered table-hover">
                <tbody>
                    <tr class="no-records-found">
                        <td align="center">No se encontraron resultados para su búsqueda</td>
                    </tr>
                </tbody>
            </table>
        }
    </section>
</article>
@if (Model.Medios.Rows.Any())
{
    <a class="infinite-more-link" href="@Html.Raw(Url.Action("crear", "pedidos", new
    {
        area = "",
        Offset = Model.OffsetParams.Offset + Model.OffsetParams.Limit,
        Limit = Model.OffsetParams.Limit,
        CategoriaId = Model.Filtros.CategoriaId,
        Tema = Model.Filtros.Tema,
        FechaDesde = Model.Filtros.FechaDesde?.ToShortDateString(),
        FechaHasta = Model.Filtros.FechaHasta?.ToShortDateString(),
        TipoId = Model.Filtros.TipoId
    }))">Página siguiente</a>
}
@section scripts{
    <script>
        var view;
        $(document).ready(function () {
            view = new views.pedidos.crear(
                @ConfigurationManager.AppSettings["Insumo.Tamano"],
                @ConfigurationManager.AppSettings["Insumo.Precio"]);
        });
    </script>
    @if (TempData.ContainsKey("Error-Notifications-Filtros"))
    {
        <script>
            toastr.error('@TempData["Error-Notifications-Filtros"]', 'Error');
        </script>
    }
    @if (TempData.ContainsKey("Error-Notifications-Confirmar"))
    {
        <script>
            toastr.error('@TempData["Error-Notifications-Confirmar"]', 'Error');
        </script>
    }
}